
name: Create tagged release

on:
  push: 
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.HUB_USERNAME}}
          password: ${{secrets.HUB_PASSWORD}}
      - name: Alibaba Cloud Container Registry (ACR) Login
        uses: aliyun/acr-login@v1
        with:
          username: ${{secrets.CLOUD_USERNAME}}
          password: ${{secrets.CLOUD_PASSWORD}}
          region-id: cn-hangzhou
          login-server: registry.cn-hangzhou.aliyuncs.com
      - name: Build and push (Docker Hub)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            silianz/python-openbmclapi:latest
            silianz/python-openbmclapi:${{env.RELEASE_VERSION}}
          platforms: linux/amd64, linux/arm64
      - name: Build and push (ACR)
        run: |
          docker buildx build --platform linux/arm64, linux/amd64 -t registry.cn-hangzhou.aliyuncs.com/silianz/python-openbmclapi:${{env.RELEASE_VERSION}} -t registry.cn-hangzhou.aliyuncs.com/silianz/python-openbmclapi:latest
          docker push registry.cn-hangzhou.aliyuncs.com/silianz/python-openbmclapi:latest
          docker push registry.cn-hangzhou.aliyuncs.com/silianz/python-openbmclapi:${{env.RELEASE_VERSION}}
          
        
